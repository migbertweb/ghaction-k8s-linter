name: Linter K8s Reutilizable con Telegram

on:
  workflow_call:
    secrets:
      TELEGRAM_BOT_TOKEN:
        required: true
      TELEGRAM_CHAT_ID:
        required: true

    outputs:
      lint_status:
        description: "Resultado del linting"
        value: ${{ jobs.lint.result }}

jobs:
  lint:
    name: Lint con kube-linter y kubeconform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Descargar manifiesto generado
        uses: actions/download-artifact@v4
        with:
          name: kustomize-manifests
          path: manifest

      - name: Instalar kube-linter y kubeconform con arkade
        uses: alexellis/arkade-get@master
        with:
          kubeconform: latest
          kube-linter: latest
  

      - name: Ejecutar kube-linter
        run: |
          set -euo pipefail
          echo "‚Üí Linting en manifest/kustomize-output.yaml"
          kube-linter lint "manifest/kustomize-output.yaml" | tee kube-linter.log

      - name: Ejecutar kubeconform
        run: |
          set -euo pipefail
          echo "‚Üí Validaci√≥n con kubeconform en manifest/kustomize-output.yaml"
          kubeconform -strict -summary -verbose -skip "IngressRoute" --ignore-missing-schemas "manifest/kustomize-output.yaml" | tee kubeconform.log

      - name: Guardar logs como artefacto si falla
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: lint-logs
          path: |
            kube-linter.log
            kubeconform.log

  notify:
    name: Notificar por Telegram
    runs-on: ubuntu-latest
    needs: lint
    if: always()

    steps:
      - name: Descargar logs si fall√≥
        if: needs.lint.result != 'success'
        uses: actions/download-artifact@v4
        with:
          name: lint-logs
          path: logs

      - name: Enviar resultado a Telegram
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          LINT_RESULT: ${{ needs.lint.result }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          COMMIT: ${{ github.sha }}
          FILE: manifest/kustomize-output.yaml
        run: |
          if [ "$LINT_RESULT" = "success" ]; then
            STATUS_ICON="‚úÖ"
            STATUS_TEXT="*Linting exitoso*"
            MESSAGE="${STATUS_ICON} ${STATUS_TEXT}\nüì¶ *Repo:* \`${REPO}\`\nüåø *Branch:* \`${BRANCH}\`\nüìÑ *Archivo:* \`${FILE}\`\nüîó [Ver commit](https://github.com/${REPO}/commit/${COMMIT})"

            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d chat_id="${CHAT_ID}" \
              -d text="${MESSAGE}" \
              -d parse_mode="Markdown"
          else
            STATUS_ICON="‚ùå"
            STATUS_TEXT="*Linting fallido*"
            MESSAGE="${STATUS_ICON} ${STATUS_TEXT}\nüì¶ *Repo:* \`${REPO}\`\nüåø *Branch:* \`${BRANCH}\`\nüìÑ *Archivo:* \`${FILE}\`\nüîó [Ver commit](https://github.com/${REPO}/commit/${COMMIT})"

            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendMessage" \
              -d chat_id="${CHAT_ID}" \
              -d text="${MESSAGE}" \
              -d parse_mode="Markdown"

            cd logs
            tar -czf lint-logs.tar.gz *.log

            curl -s -X POST "https://api.telegram.org/bot${BOT_TOKEN}/sendDocument" \
              -F chat_id="${CHAT_ID}" \
              -F document=@lint-logs.tar.gz \
              -F caption="üìÑ Logs del linting fallido"
          fi


